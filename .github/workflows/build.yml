name: Dispatch Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        type: string
        description: 'Release Tag'
        required: true
      jobType:
        type: choice
        description: 'Job Type'
        default: 'all'
        required: true
        options:
          - all
          - musl
          - darwin
          - windows

permissions:
  contents: write
  packages: write

jobs:
  releases-musl:
    if: ${{ github.event.inputs.jobType == 'musl' || github.event.inputs.jobType == 'all' }}
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64]
    steps:
      - uses: actions/checkout@v4
      - uses: wangyoucao577/go-release-action@v2
        with:
          pre_command: 'export CGO_ENABLED=1'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          ldflags: '-s -w -extldflags -static'
          asset_name: rss2cloud-${{ inputs.release_tag }}-${{ matrix.goos }}-${{ matrix.goarch }}-musl
          release_tag: ${{ github.event.inputs.release_tag }}
  releases-darwin:
    if: ${{ github.event.inputs.jobType == 'darwin' || github.event.inputs.jobType == 'all' }}
    name: Release Go Binary
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true
      - name: Install dependencies
        run: |
          export CGO_ENABLED=1
          mkdir -p ./release-tmp
          go get .
      - name: Build
        run: go build -ldflags "-s -w" -o ./release-tmp/
      - name: Generate tar
        run: |
          mkdir release-ready
          cd ./release-tmp
          tar -zcvf ../release-ready/rss2cloud-${{ inputs.release_tag }}-darwin-arm64.tar.gz *
      - name: Upload Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./release-ready/rss2cloud-${{ inputs.release_tag }}-darwin-arm64.tar.gz
          tag: ${{ inputs.release_tag }}
          overwrite: true

  releases-windows:
    if: ${{ github.event.inputs.jobType == 'windows' || github.event.inputs.jobType == 'all' }}
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [windows]
        goarch: [amd64]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          check-latest: true
      - name: Install MinGW
        run: sudo apt-get update && sudo apt-get install -y gcc-mingw-w64-x86-64
      - name: Build Windows binary
        run: |
          export CGO_ENABLED=1
          export CC=x86_64-w64-mingw32-gcc
          go build -ldflags "-s -w" -o rss2cloud.exe
        env:
          GOOS: windows
          GOARCH: amd64
      - name: Upload Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: rss2cloud.exe
          tag: ${{ github.event.inputs.release_tag }}
          asset_name: rss2cloud-${{ inputs.release_tag }}-windows-amd64.exe
          overwrite: true
